- name: "Include distribution vars"
  include_vars: "{{ ansible_distribution }}/{{ ansible_distribution_major_version }}.yml"

- name: "Install epel-release"
  yum:
   name: "epel-release"
   state: "{{ package_state }}"
  when: epel | bool
 
- name: "Ensure epel is not installed"
  yum:
   name: "epel-release"
   state: absent
  when: not epel | bool

- name: "Install a base package with yum"
  package:
   name: "{{ packages }}"
   state: "{{ package_state }}"
  when: epel | bool

- name: "Remove older kernel"
  shell: "package-cleanup --oldkernels --count={{ kernel_number }} -y"
  register: remove_kernels
  changed_when: '"No old kernels to remove" not in remove_kernels.stdout'
  failed_when: "remove_kernels.rc != 0"
  when: ansible_distribution_major_version == "7"

- name: "Remove older kernel"
  shell: "dnf remove $(dnf repoquery --installonly --latest-limit=-1 -q)"
  register: remove_kernels
  changed_when: '"Nothing to do." not in remove_kernels.stdout'
  failed_when: "remove_kernels.rc != 0"
  when: ansible_distribution_major_version == "8"

- name: "Update all packages"
  package:
    name: '*'
    state: latest
  when: update | bool

- name: "Configure SELinux"
  selinux:
    state: "{{ selinux_state }}"
    policy: "{{ selinux_policy }}"
